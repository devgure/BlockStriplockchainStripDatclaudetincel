
version: '3.9'

services:
  # Databases
  mongodb:
    image: mongo:7.0
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    networks:
      - etincel-net

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - etincel-net

  # API Gateway
  kong:
    image: kong:3.4
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /kong/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
    volumes:
      - ./gateway/kong/kong.yml:/kong/kong.yml
    networks:
      - etincel-net

  # Microservices
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    env_file:
      - .env
    depends_on:
      - mongodb
      - redis
    networks:
      - etincel-net

  profile-service:
    build:
      context: ./services/profile-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    env_file:
      - .env
    depends_on:
      - mongodb
      - redis
    networks:
      - etincel-net

  match-service:
    build:
      context: ./services/match-service
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    env_file:
      - .env
    depends_on:
      - mongodb
      - redis
    networks:
      - etincel-net

  chat-service:
    build:
      context: ./services/chat-service
      dockerfile: Dockerfile
    ports:
      - "3004:3004"
    env_file:
      - .env
    depends_on:
      - mongodb
      - redis
    networks:
      - etincel-net

  payment-service:
    build:
      context: ./services/payment-service
      dockerfile: Dockerfile
    ports:
      - "3005:3005"
    env_file:
      - .env
    depends_on:
      - mongodb
    networks:
      - etincel-net

  location-service:
    build:
      context: ./services/location-service
      dockerfile: Dockerfile
    ports:
      - "9000:9000"
    env_file:
      - .env
    depends_on:
      - redis
    networks:
      - etincel-net

  ai-service:
    build:
      context: ./services/ai-service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./ai-engine/models:/app/models
    networks:
      - etincel-net

  # Frontend
  mobile-web:
    build:
      context: ./client/mobile-web
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    networks:
      - etincel-net

  desktop-web:
    build:
      context: ./client/desktop-web
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - etincel-net

  admin-dashboard:
    build:
      context: ./admin-dashboard
      dockerfile: Dockerfile
    ports:
      - "3100:3100"
    networks:
      - etincel-net

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - etincel-net

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3300:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
    networks:
      - etincel-net

volumes:
  mongo_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  etincel-net:
    driver: bridge


